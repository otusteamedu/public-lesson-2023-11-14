version: '3.7'

services:
  php-fpm:
    build: docker
    container_name: 'php'
    ports:
      - '9000:9000'
    volumes:
      - ./:/app
    working_dir: /app

  nginx:
    image: nginx
    container_name: 'nginx'
    working_dir: /app
    ports:
      - '7777:80'
    volumes:
      - ./:/app
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf

  postgres:
    image: postgres:15
    ports:
      - 15432:5432
    container_name: 'postgresql'
    working_dir: /app
    restart: always
    environment:
      POSTGRES_DB: 'twitter'
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
    volumes:
      - dump:/app/dump
      - postgresql:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 2181:2181
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - 9900:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - "kafka"

volumes:
  dump:
  postgresql:
